@page "{id}"
@using System.Collections.Specialized
@using Microsoft.EntityFrameworkCore.Internal
@model LogisticsBooking.FrontEnd.Pages.Client.Schedule.CreateNewSchedule

<style>
    .input-group-res {
        width: 100%;
        width: 70px;
        box-sizing: border-box;
    }
    
    table {
        font-family: arial, sans-serif;
        border-collapse: collapse;
        width: 100%;
    }

    td, th {
        border: 1px solid #dddddd;
        text-align: left;
        padding: 8px;
    }
    
    
    .div > input {
        display: inline-block;
        display: -moz-inline-box;
        *display: inline; /* For IE7 */
        zoom: 1; /* Trigger hasLayout */
        width: 33%;
        text-align: center;
    }
    
    .parent{
        width: 100%;
        text-align: justify;
    }

    .kiddo{
        display: inline-block;
        vertical-align: top;
        width: 31%;
        margin: 10px;
        text-align: left;
    }
    
    .kiddo-25{
        display: inline-block;
        vertical-align: top;
        width: 25%;
        margin: 10px;
        text-align: left;
        
    }

    .bumper{
        width: 100%;
    }

</style>

<body onload="hideAllEmpty()">
<div class="py-1 text-center">
    <div class="container">
        <div class="row">
            <div class="mx-auto col-lg-5 col-md-7 col-10">
                <h1>Opret ny Tidsplan</h1>
                <p class="mb-3">Rediger nedenstående felter efter behov. Bemærk, der kan maksimalt oprettes
                    24 individuelle intervaller for en given tidsplan. Endvidere, intervallers start og slut tider må ikke overlappe med andre intervallers tider</p>
            </div>
        </div>
    </div>
</div>


<form method="post" >
    <div class="">
        <div class="container">
            <div class="row">
                <div class="col-12">
                    <div class="card bg-light text-center">
                        <div class="card-body p-1">
                            <table>
                                <tr>
                                    <th>Angiv antal bundpaller for alle intervaller</th>
                                    <th>Angiv navnet for tidsplanen</th>
                                    <th>Opret tidsplanen</th>
                                </tr>
                                <tr>
                                    <td class="d-flex justify-content-start"><div onclick="changeAllPallets(document.getElementById('allPalletsNumber').value)" class="btn btn-primary">Bekræft</div>&nbsp;&nbsp;<input type="number" class="input-group-res form-control" id="allPalletsNumber"/></td>
                                    <td><input type="text" class="form-control" name="name"/></td>
                                    <td><button type="button" class="btn btn-primary" data-toggle="modal" data-target="#opret">
                                          Opret
                                        </button></td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <div class="py-1" style="">
        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <div class="list-group" style="">
                        <text>
                            <div class="list-group-item list-group-item-action display-spacebetween parent">
                                <p style="font-weight: bold" title="Fjern/Tilføj et givent interval fra planen">+/-</p>
                                <p style="font-weight: bold" title="Totalt antal bundpaller for the givne interval" class="kiddo-25">Paller</p>
                                <p style="font-weight: bold" title="Starttidspunkt for the givne interval" class="kiddo-25">Start</p>
                                <p style="font-weight: bold" title="Sluttidspunkt for the givne interval" class="kiddo-25">Slut</p>
                            </div>
                        </text>
                        @foreach (var interval in @Model.Intervals.GetRange(0, @Model.Intervals.Count))
                        {

                            <div id="@Model.Intervals.IndexOf(interval)div" ondrop="drop(event)" ondragover="allowDrop(event)">
                                <div class="list-group-item list-group-item-action display-spacebetween" id="@Model.Intervals.IndexOf(interval)drag" draggable="true" ondragstart="drag(event)">
                                    <div class="btn input-group-res" onclick="toggle('@interval.InternalId')"><i class="fas fa-toggle-on"></i></div>
                                    <div class="@interval.InternalId parent">
                                        <input type="number" class="input-group- kiddo form-control" style="text-align: center;" id="@interval.InternalId" asp-for="@interval.BottomPallets" name="Intervals[@Model.Intervals.IndexOf(interval)].BottomPallets"/>
                                        <input type="time" pattern="[0-9]{2}:[0-9]{2}" class="kiddo form-control" style="text-align: center;" asp-for="@interval.StartTime" name="Intervals[@Model.Intervals.IndexOf(interval)].StartTime"/>
                                        <input type="time" class="kiddo form-control" style="text-align: center;" asp-for="@interval.EndTime" name="Intervals[@Model.Intervals.IndexOf(interval)].EndTime"/>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                
            </div>
        </div>
    </div>
    





<div class="modal fade" id="opret" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Opret plan</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
      Vælg om denne plan skal være en standard eller om det skal være en enkelt plan
      </div>
        <div class="modal-footer">
            <input type="hidden" value="@Model.Shifts" name="shift"/>
            <button asp-page-handler="Specific" type="submit" class="btn btn-secondary" >Enkelt</button>
            <button asp-page-handler="Standard" type="submit" class="btn btn-primary">Standard</button>
        </div>
    </div>
  </div>
</div>
</form>

</body>

@section Scripts{
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
    
    <script>
        function toggle(className) {
            var x = '.' + className;
            if ($(x).is(":hidden")) {
                show(className)
                document.getElementById(className).value = '33';
            } else {
                hide(className)
                document.getElementById(className).value = '0';
            }
        }
  
 
        function hide(className) {
            var x = '.' + className;
            $(x).hide();
            document.getElementById(className).value = '0';
        }
   


        function show(className) {
            var x = '.' + className;
            $(x).show();
            document.getElementById(className).value = '33';
        }
        
        function changeAllPallets(value) {
            var i;
            for (i = 0; i < @Model.Intervals.Count; i++) {
                if ($(x).is(":hidden")) {

                } else {
                    document.getElementById(className).value = parseInt(value);
                }
            }
        }

    </script>
    
    <script>
        function hideAllEmpty()
        {
            var i;
            for (i = 11; i < 27; i++) {
                hide(i); 
            }
        }
    </script>
    
    <script>
        function allowDrop(ev) {
            ev.preventDefault();
        }

        function drag(ev) {
            ev.dataTransfer.setData("src", ev.target.id);
        }

        function drop(ev) {
            ev.preventDefault();
            var src = document.getElementById(ev.dataTransfer.getData("src"));
            var srcParent = src.parentNode;
            var tgt = ev.currentTarget.firstElementChild;

            ev.currentTarget.replaceChild(src, tgt);
            srcParent.appendChild(tgt);
        }
    </script>
    
}