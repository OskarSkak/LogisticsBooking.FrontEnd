@page
@using LogisticsBooking.FrontEnd.DataServices.Models
@model LogisticsBooking.FrontEnd.Pages.Client.Schedule.Calendar
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Xsrf




@using (Html.BeginForm())
{
  
}




<div class="calendar">

    <form method="post">
    <div class="container-fluid py-4"> 
        <div class="row justify-content-center ">
            <div class="col-lg text-center">
                
                    <input type="submit" asp-page-handler="back" class="fas fa-arrow-left arrow-size "> </input>
                
      
            </div>
            <div class="col-lg text-center">
                
                <span class="date-size"> @Model.date.Date.ToString("Y") </span>
            </div>
            <div class="col-lg text-center">
                <input type="submit" asp-page-handler="Forward" class="fas fa-arrow-right arrow-size"></input>
            </div>
        </div>
    </div>
    </form>
@{
    var totaldays = 0;
}
@functions
{

    public int getMonth(DateTime dateTime)
    {
        switch (dateTime.Month)
        {
            case 1:
                return 1;
            case 2:
                return 2;
            case 3:
                return 3;
            case 4:
                return 4;
            case 5:
                return 5;
            case 6:
                return 6;
            case 7:
                return 7;
            case 8:
                return 8;
            case 9:
                return 9;
            case 10:
                return 10;
            case 11:
                return 11;
            case 12:
                return 12;
           default:
                return 0;
        }
    }

}
    <div class="container-fluid py-4" >
        <div class="row">
            
            @for (int i = 0; i <= 6; i++)
            {
                if (Model.date.AddDays(totaldays).Month == Model.currentMonth)
                {
                    <div id="test" class="col-lg max-em mt-2 border-days test ">
                        <div class="text-center color-top">
                            <span class="font-weight-700">22-07-19</span>
                        </div>
                        @if (DateTime.Today > Model.date.AddDays(totaldays))
                        {
                            <div class="content-color before-current-date " data-value="hej">
                                <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                @{
                                    totaldays = totaldays + 1;
                                }
                            </div>
                        }
                        else
                        {
                            <div class="content-color test" data-value="hej">
                                <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                @{
                                    totaldays = totaldays + 1;
                                }


                            </div>
                        }
                    </div>
                }
            }
            @Html.AntiForgeryToken();
        </div>
        
        <div class="row">
                    @for (int i = 0; i <= 6; i++)
                    {
                        if (Model.date.AddDays(totaldays).Month == Model.currentMonth)
                        {
                            <div id="test" class="col-lg max-em mt-2 border-days test ">
                                <div class="text-center color-top">
                                    <span class="font-weight-700">22-07-19</span>
                                </div>
                                @{
                                    var date = Model.DateAlreadyHasSchedule(Model.date.AddDays(totaldays), Model.Schedules);
                                }
                                @if (date == null)
                                {
                                    
                                
                                @if (DateTime.Today > Model.date.AddDays(totaldays))
                                {
                                    <div class="content-color before-current-date " data-value="hej">
                                        <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                        @{
                                            totaldays = totaldays + 1;
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="content-color test" data-value="hej">
                                        <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                        @{
                                            totaldays = totaldays + 1;
                                        }
        
        
                                    </div>
                                }
                                }
                                else
                                {
                                    @if (DateTime.Today > Model.date.AddDays(totaldays))
                                     {
                                         <div class="content-color before-current-date " data-value="hej">
                                             <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                             @{
                                                 totaldays = totaldays + 1;
                                             }
                                         </div>
                                     }
                                     else
                                     {
                                         <div class="booked-color test" data-value="hej">
                                             <!-- Button trigger modal -->
                                             
                                             <div class="modal fade" id="c_@totaldays" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                 <div class="modal-dialog" role="document">
                                                     <div class="modal-content">
                                                         <div class="modal-header">
                                                             <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                                                             <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                 <span aria-hidden="true">&times;</span>
                                                             </button>
                                                         </div>
                                                         <div class="modal-body">
                                                             @Model.Schedules.FirstOrDefault().Name 
                                                             @foreach(Interval interval in Model.Schedules.FirstOrDefault().Intervals )
                                                             {
                                                                 <span>@interval.StartTime - </span>  <span>@interval.EndTime</span>
                                                             }
                                                         </div>
                                                         <div class="modal-footer">
                                                             <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                             <button type="button" class="btn btn-primary">Save changes</button>
                                                         </div>
                                                     </div>
                                                 </div>
                                             </div>
                                             
                                             
                                             <button type="button" class="" data-toggle="modal" data-target="#c_@totaldays">
                                           
                                         
                                                 <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                                 @{
                                                     totaldays = totaldays + 1;
                                                 }
                                             </button>
        
                                         </div>
                                         
                                        
                                     }
                                }
                                
                            </div>
                        }
                    }
                </div>
        <div class="row">
                    @for (int i = 0; i <= 6; i++)
                    {
                        if (Model.date.AddDays(totaldays).Month == Model.currentMonth)
                        {
                            <div id="test" class="col-lg max-em mt-2 border-days test ">
                                <div class="text-center color-top">
                                    <span class="font-weight-700">22-07-19</span>
                                </div>
                                @{
                                    var date = Model.DateAlreadyHasSchedule(Model.date.AddDays(totaldays), Model.Schedules);
                                }
                                @if (date == null)
                                {
                                    
                                
                                @if (DateTime.Today > Model.date.AddDays(totaldays))
                                {
                                    <div class="content-color before-current-date " data-value="hej">
                                        <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                        @{
                                            totaldays = totaldays + 1;
                                        }
                                    </div>
                                }
                                else
                                {
                                    <div class="content-color test" data-value="hej">
                                        <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                        @{
                                            totaldays = totaldays + 1;
                                        }
        
        
                                    </div>
                                }
                                }
                                else
                                {
                                    @if (DateTime.Today > Model.date.AddDays(totaldays))
                                     {
                                         <div class="content-color before-current-date " data-value="hej">
                                             <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                             @{
                                                 totaldays = totaldays + 1;
                                             }
                                         </div>
                                     }
                                     else
                                     {
                                         <div class="booked-color test" data-value="hej">
                                             <!-- Button trigger modal -->
                                             
                                             <div class="modal fade" id="c_@totaldays" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                                 <div class="modal-dialog" role="document">
                                                     <div class="modal-content">
                                                         <div class="modal-header">
                                                             <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
                                                             <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                 <span aria-hidden="true">&times;</span>
                                                             </button>
                                                         </div>
                                                         <div class="modal-body">
                                                             @Model.Schedules.FirstOrDefault().Name 
                                                             @foreach(Interval interval in Model.Schedules.FirstOrDefault().Intervals )
                                                             {
                                                                 <span>@interval.StartTime - </span>  <span>@interval.EndTime</span>
                                                             }
                                                         </div>
                                                         <div class="modal-footer">
                                                             <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                             <button type="button" class="btn btn-primary">Save changes</button>
                                                         </div>
                                                     </div>
                                                 </div>
                                             </div>
                                             
                                             
                                             <button type="button" class="" data-toggle="modal" data-target="#c_@totaldays">
                                           
                                         
                                                 <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                                 @{
                                                     totaldays = totaldays + 1;
                                                 }
                                             </button>
        
                                         </div>
                                         
                                        
                                     }
                                }
                                
                            </div>
                        }
                    }
                </div>
            <div class="row">
                @for (int i = 0; i <= 6; i++)
                {
                    if (Model.date.AddDays(totaldays).Month == Model.currentMonth)
                    {
                        <div id="test" class="col-lg max-em mt-2 border-days test ">
                            <div class="text-center color-top">
                                <span class="font-weight-700">22-07-19</span>
                            </div>
                            
                            
                            @if (DateTime.Today > Model.date.AddDays(totaldays))
                            {
                                <div class="content-color before-current-date " data-value="hej">
                                    <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                    @{
                                        totaldays = totaldays + 1;
                                    }
                                </div>
                            }
                            else
                            {
                                <div class="content-color test" data-value="hej">
                                    <span >@Model.date.AddDays(totaldays).ToString("D")</span>
                                    @{
                                        totaldays = totaldays + 1;
                                    }


                                </div>
                            }
                        </div>
                    }
                }
            </div>
            
        </div>
        <span class="sendAsync"> Send data </span>

    </div>

      





<!-- Modal -->


<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="modal-body">
        ...
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>



@section Scripts {
    
    
    <link rel="stylesheet" type="text/css" href="~/css/Calendar.css"/>

    <script src="~/js/Util/util.js" language="javascript" type="text/javascript"></script>
    <script
        src="https://code.jquery.com/jquery-3.4.1.js"
        integrity="sha256-WpOohJOqMqqyKL9FccASB9O0KwACQJpFTUBLTYOVvVU="
        crossorigin="anonymous"></script>

    
    <script>
        var token = $('input[name="__RequestVerificationToken"]').val();

        var headers = {};

        headers['__RequestVerificationToken'] = token;

    
        var listOfDates = new Array(35);
        $(".test").click(function() {
            if ($(this).hasClass("content-color")) {
                $(this).removeClass("content-color").addClass("ok");
                var f = $(this).first().contents().eq(1).text();
                listOfDates.push(f);
            } else if ($(this).hasClass("ok")) {

                $(this).removeClass("ok").addClass("content-color");
                var f = $(this).first().contents().eq(1).text();

                function include(arr,obj) {
                    return (arr.indexOf(obj) != -1);
                }
                var a = include(listOfDates , f);
                var index = listOfDates.indexOf(a);
                if (index > -1) {
                listOfDates.splice(index, 1);
                }
                console.log(listOfDates);
            }

        });
        

            
$(".sendAsync").click(function() {
  $.ajax({
        type: "POST" ,
        
        url: "https://localhost:4434/Client/Schedule/Calendar" ,
        beforeSend: function (xhr) {
            xhr.setRequestHeader("XSRF-TOKEN",
                $('input:hidden[name="__RequestVerificationToken"]').val());
        },
        headers:headers, 
        data: JSON.stringify(listOfDates),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function(data) {
            console.log("succes")
            
            window.location.href='https://localhost:4434/Client/Schedule/ScheduleOverview';
      },
        failure: function(data) {
            console.log("fail")
            window.location.href='https://localhost:4434/Client/Schedule/ScheduleOverview';
            
      }
    });
        
});


           
     
    </script>


}




